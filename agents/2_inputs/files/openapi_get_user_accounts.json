{
    "openapi": "3.0.0",
    "info": {
        "title": "get_user_accounts",
        "description": "Retrieves a list of accounts for the user.",
        "version": "1.0.0.0"
    },
    "servers": [
        {
            "url": "https://prod-06.eastus2.logic.azure.com/workflows/75a8695be7b649d7aa6fc22ef9696423/triggers"
        }
    ],
    "paths": {
        "/When_a_HTTP_request_is_received/paths/invoke": {
            "post": {
                "summary": "Get User Accounts",
                "description": "Retrieves a list of accounts for the user.",
                "operationId": "GetUserAccounts",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "description": "The service API version.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "2016-10-01"
                        }
                    },
                    {
                        "name": "sp",
                        "in": "query",
                        "description": "The permissions; generally 'read' or 'write'.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "/triggers/When_a_HTTP_request_is_received/run"
                        }
                    },
                    {
                        "name": "sv",
                        "in": "query",
                        "description": "The version number of the query parameters.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "1.0"
                        }
                    },
                    {
                        "name": "sig",
                        "in": "query",
                        "description": "The SHA 256 hash of the entire request URI with an internal key.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "BVOQhdXvB2mkAtp-R7gMvfFdeyivh7Fmu57rWK4PXjQ"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request parameters",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAccountRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation returning a list of accounts for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountsResponse"
                                },
                                "example": {
                                    "accounts": [
                                        {
                                            "Id": 1,
                                            "Name": "Checking Account",
                                            "Type": "checking"
                                        },
                                        {
                                            "Id": 2,
                                            "Name": "Savings Account",
                                            "Type": "savings"
                                        }
                                    ],
                                    "count": 2
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid or missing user_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UserAccountRequest": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The unique identifier for the user"
                    }
                },
                "required": ["user_id"]
            },
            "Account": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The unique identifier for the account"
                    },
                    "Name": {
                        "type": "string",
                        "maxLength": 100,
                        "description": "The name of the account"
                    },
                    "Type": {
                        "type": "string",
                        "maxLength": 50,
                        "description": "The type of account (e.g., checking, savings, credit card)",
                        "nullable": true
                    }
                },
                "required": ["Id", "Name"]
            },
            "AccountsResponse": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        },
                        "description": "List of user accounts"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Total number of accounts returned"
                    }
                },
                "required": ["accounts", "count"]
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string",
                                "description": "Error code"
                            },
                            "message": {
                                "type": "string",
                                "description": "Error message"
                            },
                            "details": {
                                "type": "string",
                                "description": "Additional error details when available",
                                "nullable": true
                            }
                        },
                        "required": ["code", "message"]
                    }
                },
                "required": ["error"]
            }
        }
    }
}
